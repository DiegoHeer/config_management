---
- name: Install development apt packages
  ansible.builtin.package:
    name:
      - nodejs
      - npm
    state: present

- name: Install VS Code
  community.general.snap:
    name: code
    classic: true
    state: present

- name: Install Terraform
  ansible.builtin.include_role:
    name: andrewrothstein.terraform

- name: Check if Terraform autocompletion is enabled
  ansible.builtin.lineinfile:
    path: /home/{{ username }}/.bashrc
    regexp: "terraform"
    state: absent
  check_mode: true
  changed_when: false
  register: terraform_autocomplete

- name: Enable Terraform autocompletion
  ansible.builtin.command: terraform -install-autocomplete
  when: not terraform_autocomplete.found
  changed_when: not terraform_autocomplete.found
  become: true
  become_user: "{{ username }}"
  notify: Apply updated PATH

- name: Check if Poetry is installed
  ansible.builtin.stat:
    path: /bin/poetry
  register: poetry_check

- name: Install Poetry
  ansible.builtin.shell: set -o pipefail && curl -sSL https://install.python-poetry.org | POETRY_HOME=/ python3 -
  args:
    creates: /bin/poetry
    executable: "{{ shell }}"
  when: not poetry_check.stat.exists

- name: Check Poetry virtualenvs.in-project config
  ansible.builtin.command: poetry config virtualenvs.in-project
  become: false
  become_user: "{{ username }}"
  changed_when: false
  register: poetry_in_project

- name: Configure Poetry virtualenvs.in-project
  ansible.builtin.command: poetry config virtualenvs.in-project true
  become: false
  become_user: "{{ username }}"
  changed_when: poetry_in_project.stdout != "true"

- name: Install AWS CLI
  community.general.snap:
    name: aws-cli
    classic: true
    state: present
