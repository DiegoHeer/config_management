services:
  olivetin:
    container_name: olivetin
    restart: unless-stopped
    image: jamesread/olivetin:2025.4.22
    volumes:
      - /home/${USERNAME}/services_data/olivetin/config:/config
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:1337/api/readyz"]
      interval: 10s
      timeout: 5s
      retries: 5

  dozzle:
    container_name: dozzle
    image: amir20/dozzle:latest
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    healthcheck:
      test: ["CMD", "/dozzle", "healthcheck"]
      interval: 3s
      timeout: 30s
      retries: 5
      start_period: 30s

  cup:
    container_name: cup
    image: ghcr.io/sergi0g/cup:latest
    command: serve -p 9000
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

  it-tools:
    container_name: it-tools
    image: corentinth/it-tools:latest
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80"]
      interval: 10s
      timeout: 5s
      retries: 5

  stirling-pdf:
    container_name: stirling-pdf
    image: stirlingtools/stirling-pdf:0.45.6
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/api/v1/info/status"]
      interval: 20s
      timeout: 10s
      retries: 3
      start_period: 15s

  linkwarden:
    container_name: linkwarden
    image: ghcr.io/linkwarden/linkwarden:v2.10.0
    environment:
      - PUID=1000
      - PGID=1000
      - NEXTAUTH_URL=http://linkwarden:3000/api/v1/auth
      - NEXTAUTH_SECRET=linkwarden_secret_password
      - DATABASE_URL=postgresql://postgres:postgres@linkwarden-db:5432/postgres
    volumes:
      - /home/${USERNAME}/services_data/linkwarden/data:/data/data
    depends_on:
      linkwarden-db:
        condition: service_healthy

  linkwarden-db:
    container_name: linkwarden_db
    image: postgres:16-alpine
    environment:
      - POSTGRES_PASSWORD=postgres
    volumes:
      - /home/${USERNAME}/services_data/linkwarden/pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U myuser -d mydatabase"]
      interval: 10s
      timeout: 5s
      retries: 5

  grist:
    container_name: grist
    image: gristlabs/grist:1.5.1
    environment:
        - PORT=9999
    volumes:
        - /home/${USERNAME}/services_data/glance/persist:/persist

  ntfy:
    container_name: ntfy
    image: binwiederhier/ntfy:v2.12
    command:
      - serve
    environment:
      - TZ=Europe/Amsterdam
    volumes:
      - /var/cache/ntfy:/var/cache/ntfy
      - /home/${USERNAME}/services_data/ntfy:/etc/ntfy
    healthcheck:
        test: ["CMD-SHELL", "wget -q --tries=1 http://localhost:80/v1/health -O - | grep -Eo '\"healthy\"\\s*:\\s*true' || exit 1"]
        interval: 60s
        timeout: 10s
        retries: 3
        start_period: 40s
    restart: unless-stopped

  mealie:
    container_name: mealie
    image: ghcr.io/mealie-recipes/mealie:v2.8.0
    deploy:
      resources:
        limits:
          memory: 1000M
    volumes:
      - /home/${USERNAME}/services_data/mealie:/app/data/
    environment:
      ALLOW_SIGNUP: "false"
      PUID: 1000
      PGID: 1000
      TZ: Europe/Amsterdam
      BASE_URL: mealie.dynabase.xyz
      OPENAI_API_KEY: ${OPENAI_API_KEY}
